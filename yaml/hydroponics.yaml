substitutions:
  devicename: "hydroponics"

esphome:
  name: $devicename
  friendly_name: $devicename
  # on_boot:
  #   - lambda: |-
  #       (unsigned char)id(my_ota).set_auth_password("");

esp32:
  board: esp32-gateway
  framework:
    type: arduino
    version: latest
    # version: 2.0.11

logger:
  logs:
    component: ERROR
    sensor: ERROR
    text_sensor: ERROR

api:

ota:

wifi:
  ssid: !secret wifi_ssid2
  password: !secret wifi_password2

  ap:
    ssid: $devicename
    password: $devicename

  reboot_timeout: 0s
  fast_connect: true
  power_save_mode: none
  
captive_portal:

web_server:
  port: 80
  css_url: v3
  include_internal: True
  local: True
  version: 2

interval:
  - interval: 1000ms
    then:
      if:
        condition:
          wifi.connected:
        then:
          if:
            condition:
              api.connected:
            then:
              if:
                condition:
                  not:
                    light.is_on: led
                then:
                  - light.turn_on: 
                      id: led
                      effect: none
            else:
              if:
                condition:
                  not:
                    light.is_on: led
                then:
                  - light.turn_on: 
                      id: led
                      effect: strobe
        else:
          - light.turn_off: 
              id: led


i2c:
  id: i2c0
  sda: GPIO16
  scl: GPIO32
  scan: True
  frequency: 800kHz


tca9548a:
  - address: 0x70
    id: multiplex0
    i2c_id: i2c0
    channels:
      - bus_id: multiplex0channel0
        channel: 0
      - bus_id: multiplex0channel1
        channel: 1
      - bus_id: multiplex0channel2
        channel: 2
      - bus_id: multiplex0channel3
        channel: 3
      - bus_id: multiplex0channel4
        channel: 4
      - bus_id: multiplex0channel5
        channel: 5
      - bus_id: multiplex0channel6
        channel: 6
      - bus_id: multiplex0channel7
        channel: 7


# ezo_pmp:
#   id: ezo_pmp0
#   address: 0x67  # Default Address for the EZO-PMP.
#   i2c_id: multiplex0channel1
#   update_interval: 1s    

# ads1115:
#   - id: ads1115_hub0
#     address: 0x48
#     i2c_id: multiplex0channel0
#     continuous_mode: True


# pca9685:
#   - id: pca9685_hub0
#     i2c_id: multiplex0channel2
#     frequency: 1000


# pca9685custom:
#   - id: pca9685custom_hub0
#     address: 0x40
#     i2c_id: multiplex0channel0
#     frequency: 1500


external_components:
  - source: github://Hasatio/esphome
    components: [water_quality]
    refresh: always

water_quality:
  address: 0x00
  i2c_id: multiplex0channel2
  version: 0
  pump1: 
    pump_type: 1
    pump_calib_gain: 60
  pump2: 
    pump_type: 2
    pump_calib_gain: 120
  pump3: 
    pump_type: 0
  pump4: 
    pump_type: 0
  pump5: 
    pump_type: 2
    pump_calib_gain: 180
  pump6: 
    pump_type: 1
    pump_calib_gain: 240
  level:
    res_min: [150]
    res_max: [250]
  sensors:
    ec_channel: 1
    ec_type: 1
    ph_channel: 2
    ph_type: 1


sensor:
  - platform: uptime
    name: Uptime Sensor
    update_interval: 1s
    
  - platform: internal_temperature
    name: "Internal Temperature"

  - platform: water_quality
    water_temp:
      id: water_temp
      name: water_temp
    voltage:
      id: voltage
      name: voltage
    ec:
      id: ec
      name: ec
    ph:
      id: ph
      name: ph

  # - platform: ads1115
  #   multiplexer: A0_GND
  #   ads1115_id : ads1115_hub0
  #   gain: 6.144
  #   name: "ADS1115 1"
  #   id: "ADS1115_1"
  #   update_interval: 0ms


text_sensor:
  - platform: water_quality
    pump_total:
      id: pump_total
      name: pump_total
    pump_status:
      id: pump_status
      name: pump_status
    servo_status:
      id: servo_status
      name: servo_status
    level:
      id: level
      name: level
    analog:
      id: analog
      name: analog
    digital:
      id: digital
      name: digital


button:
  - platform: restart
    name: "Restart"
    

switch:
#   - platform: gpio
#     name: "Led"
#     pin: 
#       number: GPIO33
#       mode:
#         output: True
#       inverted: False
    
  - platform: template
    id: pump_reset1
    name: "Pump_Reset1"
    optimistic: true
    restore_mode: ALWAYS_OFF
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.pump_reset:
            pump_reset: !lambda |-
              return {static_cast<bool>(id(pump_reset1).state), static_cast<bool>(id(pump_reset2).state), static_cast<bool>(id(pump_reset3).state), static_cast<bool>(id(pump_reset4).state), static_cast<bool>(id(pump_reset5).state), static_cast<bool>(id(pump_reset6).state)};
        - delay: 0s
        - switch.turn_off: pump_reset1
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.pump_reset:
            pump_reset: !lambda |-
              return {static_cast<bool>(id(pump_reset1).state), static_cast<bool>(id(pump_reset2).state), static_cast<bool>(id(pump_reset3).state), static_cast<bool>(id(pump_reset4).state), static_cast<bool>(id(pump_reset5).state), static_cast<bool>(id(pump_reset6).state)};

  - platform: template
    id: pump_reset2
    name: "Pump_Reset2"
    optimistic: true
    restore_mode: ALWAYS_OFF
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.pump_reset:
            pump_reset: !lambda |-
              return {static_cast<bool>(id(pump_reset1).state), static_cast<bool>(id(pump_reset2).state), static_cast<bool>(id(pump_reset3).state), static_cast<bool>(id(pump_reset4).state), static_cast<bool>(id(pump_reset5).state), static_cast<bool>(id(pump_reset6).state)};
        - delay: 0s
        - switch.turn_off: pump_reset2
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.pump_reset:
            pump_reset: !lambda |-
              return {static_cast<bool>(id(pump_reset1).state), static_cast<bool>(id(pump_reset2).state), static_cast<bool>(id(pump_reset3).state), static_cast<bool>(id(pump_reset4).state), static_cast<bool>(id(pump_reset5).state), static_cast<bool>(id(pump_reset6).state)};

  - platform: template
    id: pump_reset3
    name: "Pump_Reset3"
    optimistic: true
    restore_mode: ALWAYS_OFF
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.pump_reset:
            pump_reset: !lambda |-
              return {static_cast<bool>(id(pump_reset1).state), static_cast<bool>(id(pump_reset2).state), static_cast<bool>(id(pump_reset3).state), static_cast<bool>(id(pump_reset4).state), static_cast<bool>(id(pump_reset5).state), static_cast<bool>(id(pump_reset6).state)};
        - delay: 0s
        - switch.turn_off: pump_reset3
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.pump_reset:
            pump_reset: !lambda |-
              return {static_cast<bool>(id(pump_reset1).state), static_cast<bool>(id(pump_reset2).state), static_cast<bool>(id(pump_reset3).state), static_cast<bool>(id(pump_reset4).state), static_cast<bool>(id(pump_reset5).state), static_cast<bool>(id(pump_reset6).state)};

  - platform: template
    id: pump_reset4
    name: "Pump_Reset4"
    optimistic: true
    restore_mode: ALWAYS_OFF
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.pump_reset:
            pump_reset: !lambda |-
              return {static_cast<bool>(id(pump_reset1).state), static_cast<bool>(id(pump_reset2).state), static_cast<bool>(id(pump_reset3).state), static_cast<bool>(id(pump_reset4).state), static_cast<bool>(id(pump_reset5).state), static_cast<bool>(id(pump_reset6).state)};
        - delay: 0s
        - switch.turn_off: pump_reset4
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.pump_reset:
            pump_reset: !lambda |-
              return {static_cast<bool>(id(pump_reset1).state), static_cast<bool>(id(pump_reset2).state), static_cast<bool>(id(pump_reset3).state), static_cast<bool>(id(pump_reset4).state), static_cast<bool>(id(pump_reset5).state), static_cast<bool>(id(pump_reset6).state)};

  - platform: template
    id: pump_reset5
    name: "Pump_Reset5"
    optimistic: true
    restore_mode: ALWAYS_OFF
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.pump_reset:
            pump_reset: !lambda |-
              return {static_cast<bool>(id(pump_reset1).state), static_cast<bool>(id(pump_reset2).state), static_cast<bool>(id(pump_reset3).state), static_cast<bool>(id(pump_reset4).state), static_cast<bool>(id(pump_reset5).state), static_cast<bool>(id(pump_reset6).state)};
        - delay: 0s
        - switch.turn_off: pump_reset5
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.pump_reset:
            pump_reset: !lambda |-
              return {static_cast<bool>(id(pump_reset1).state), static_cast<bool>(id(pump_reset2).state), static_cast<bool>(id(pump_reset3).state), static_cast<bool>(id(pump_reset4).state), static_cast<bool>(id(pump_reset5).state), static_cast<bool>(id(pump_reset6).state)};

  - platform: template
    id: pump_reset6
    name: "Pump_Reset6"
    optimistic: true
    restore_mode: ALWAYS_OFF
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.pump_reset:
            pump_reset: !lambda |-
              return {static_cast<bool>(id(pump_reset1).state), static_cast<bool>(id(pump_reset2).state), static_cast<bool>(id(pump_reset3).state), static_cast<bool>(id(pump_reset4).state), static_cast<bool>(id(pump_reset5).state), static_cast<bool>(id(pump_reset6).state)};
        - delay: 0s
        - switch.turn_off: pump_reset6
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.pump_reset:
            pump_reset: !lambda |-
              return {static_cast<bool>(id(pump_reset1).state), static_cast<bool>(id(pump_reset2).state), static_cast<bool>(id(pump_reset3).state), static_cast<bool>(id(pump_reset4).state), static_cast<bool>(id(pump_reset5).state), static_cast<bool>(id(pump_reset6).state)};

  - platform: template
    id: digital_out1
    name: "Digital_Out1"
    optimistic: true
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.digital_out:
            digital_out: !lambda |-
              return {static_cast<bool>(id(digital_out1).state), static_cast<bool>(id(digital_out2).state), static_cast<bool>(id(digital_out3).state), static_cast<bool>(id(digital_out4).state)};
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.digital_out:
            digital_out: !lambda |-
              return {static_cast<bool>(id(digital_out1).state), static_cast<bool>(id(digital_out2).state), static_cast<bool>(id(digital_out3).state), static_cast<bool>(id(digital_out4).state)};

  - platform: template
    id: digital_out2
    name: "Digital_Out2"
    optimistic: true
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.digital_out:
            digital_out: !lambda |-
              return {static_cast<bool>(id(digital_out1).state), static_cast<bool>(id(digital_out2).state), static_cast<bool>(id(digital_out3).state), static_cast<bool>(id(digital_out4).state)};
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.digital_out:
            digital_out: !lambda |-
              return {static_cast<bool>(id(digital_out1).state), static_cast<bool>(id(digital_out2).state), static_cast<bool>(id(digital_out3).state), static_cast<bool>(id(digital_out4).state)};

  - platform: template
    id: digital_out3
    name: "Digital_Out3"
    optimistic: true
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.digital_out:
            digital_out: !lambda |-
              return {static_cast<bool>(id(digital_out1).state), static_cast<bool>(id(digital_out2).state), static_cast<bool>(id(digital_out3).state), static_cast<bool>(id(digital_out4).state)};
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.digital_out:
            digital_out: !lambda |-
              return {static_cast<bool>(id(digital_out1).state), static_cast<bool>(id(digital_out2).state), static_cast<bool>(id(digital_out3).state), static_cast<bool>(id(digital_out4).state)};

  - platform: template
    id: digital_out4
    name: "Digital_Out4"
    optimistic: true
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.digital_out:
            digital_out: !lambda |-
              return {static_cast<bool>(id(digital_out1).state), static_cast<bool>(id(digital_out2).state), static_cast<bool>(id(digital_out3).state), static_cast<bool>(id(digital_out4).state)};
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.digital_out:
            digital_out: !lambda |-
              return {static_cast<bool>(id(digital_out1).state), static_cast<bool>(id(digital_out2).state), static_cast<bool>(id(digital_out3).state), static_cast<bool>(id(digital_out4).state)};

  - platform: template
    id: servo_mode1
    name: "Servo_mode1"
    optimistic: true
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};

  - platform: template
    id: servo_mode2
    name: "Servo_mode2"
    optimistic: true
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};

  - platform: template
    id: servo_mode3
    name: "Servo_mode3"
    optimistic: true
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};

  - platform: template
    id: servo_mode4
    name: "Servo_mode4"
    optimistic: true
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};

  - platform: template
    id: servo_mode5
    name: "Servo_mode5"
    optimistic: true
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};

  - platform: template
    id: servo_mode6
    name: "Servo_mode6"
    optimistic: true
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};

  - platform: template
    id: servo_mode7
    name: "Servo_mode7"
    optimistic: true
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};

  - platform: template
    id: servo_mode8
    name: "Servo_mode8"
    optimistic: true
    turn_on_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};
    turn_off_action:
      then:
        - delay: 0s
        - water_quality.servo_mode:
            servo_mode: !lambda |-
              return {static_cast<bool>(id(servo_mode1).state), static_cast<bool>(id(servo_mode2).state), static_cast<bool>(id(servo_mode3).state), static_cast<bool>(id(servo_mode4).state), static_cast<bool>(id(servo_mode5).state), static_cast<bool>(id(servo_mode6).state), static_cast<bool>(id(servo_mode7).state), static_cast<bool>(id(servo_mode8).state)};


number:
  - platform: template
    id: pump_mode1
    name: "Pump_Mode1"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 2
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_mode:
            # id: water
            # pump_mode: [1,2]
            # pump_mode: !lambda |- 
            #   int mode1_state = 1;
            #   int mode2_state = 2;
            #   std::vector<uint8_t> pump_mode = {mode1_state, mode2_state};
            #   return pump_mode;
            # pump_mode: !lambda |- 
            #   return {1, 0, 1, 4};
            pump_mode: !lambda |- 
              return {static_cast<uint8_t>(id(pump_mode1).state), static_cast<uint8_t>(id(pump_mode2).state), static_cast<uint8_t>(id(pump_mode3).state), static_cast<uint8_t>(id(pump_mode4).state), static_cast<uint8_t>(id(pump_mode5).state), static_cast<uint8_t>(id(pump_mode6).state)};

  - platform: template
    id: pump_mode2
    name: "Pump_Mode2"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 2
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_mode:
            pump_mode: !lambda |-
              return {static_cast<uint8_t>(id(pump_mode1).state), static_cast<uint8_t>(id(pump_mode2).state), static_cast<uint8_t>(id(pump_mode3).state), static_cast<uint8_t>(id(pump_mode4).state), static_cast<uint8_t>(id(pump_mode5).state), static_cast<uint8_t>(id(pump_mode6).state)};

  - platform: template
    id: pump_mode3
    name: "Pump_Mode3"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 2
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_mode:
            pump_mode: !lambda |-
              return {static_cast<uint8_t>(id(pump_mode1).state), static_cast<uint8_t>(id(pump_mode2).state), static_cast<uint8_t>(id(pump_mode3).state), static_cast<uint8_t>(id(pump_mode4).state), static_cast<uint8_t>(id(pump_mode5).state), static_cast<uint8_t>(id(pump_mode6).state)};

  - platform: template
    id: pump_mode4
    name: "Pump_Mode4"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 2
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_mode:
            pump_mode: !lambda |-
              return {static_cast<uint8_t>(id(pump_mode1).state), static_cast<uint8_t>(id(pump_mode2).state), static_cast<uint8_t>(id(pump_mode3).state), static_cast<uint8_t>(id(pump_mode4).state), static_cast<uint8_t>(id(pump_mode5).state), static_cast<uint8_t>(id(pump_mode6).state)};

  - platform: template
    id: pump_mode5
    name: "Pump_Mode5"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 2
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_mode:
            pump_mode: !lambda |-
              return {static_cast<uint8_t>(id(pump_mode1).state), static_cast<uint8_t>(id(pump_mode2).state), static_cast<uint8_t>(id(pump_mode3).state), static_cast<uint8_t>(id(pump_mode4).state), static_cast<uint8_t>(id(pump_mode5).state), static_cast<uint8_t>(id(pump_mode6).state)};

  - platform: template
    id: pump_mode6
    name: "Pump_Mode6"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 2
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_mode:
            pump_mode: !lambda |-
              return {static_cast<uint8_t>(id(pump_mode1).state), static_cast<uint8_t>(id(pump_mode2).state), static_cast<uint8_t>(id(pump_mode3).state), static_cast<uint8_t>(id(pump_mode4).state), static_cast<uint8_t>(id(pump_mode5).state), static_cast<uint8_t>(id(pump_mode6).state)};

  - platform: template
    id: pump_dose1
    name: "Pump_Dose1"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 10000
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_dose:
            pump_dose: !lambda |-
              return {static_cast<float>(id(pump_dose1).state), static_cast<float>(id(pump_dose2).state), static_cast<float>(id(pump_dose3).state), static_cast<float>(id(pump_dose4).state), static_cast<float>(id(pump_dose5).state), static_cast<float>(id(pump_dose6).state)};

  - platform: template
    id: pump_dose2
    name: "Pump_Dose2"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 10000
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_dose:
            pump_dose: !lambda |-
              return {static_cast<float>(id(pump_dose1).state), static_cast<float>(id(pump_dose2).state), static_cast<float>(id(pump_dose3).state), static_cast<float>(id(pump_dose4).state), static_cast<float>(id(pump_dose5).state), static_cast<float>(id(pump_dose6).state)};

  - platform: template
    id: pump_dose3
    name: "Pump_Dose3"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 10000
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_dose:
            pump_dose: !lambda |-
              return {static_cast<float>(id(pump_dose1).state), static_cast<float>(id(pump_dose2).state), static_cast<float>(id(pump_dose3).state), static_cast<float>(id(pump_dose4).state), static_cast<float>(id(pump_dose5).state), static_cast<float>(id(pump_dose6).state)};

  - platform: template
    id: pump_dose4
    name: "Pump_Dose4"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 10000
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_dose:
            pump_dose: !lambda |-
              return {static_cast<float>(id(pump_dose1).state), static_cast<float>(id(pump_dose2).state), static_cast<float>(id(pump_dose3).state), static_cast<float>(id(pump_dose4).state), static_cast<float>(id(pump_dose5).state), static_cast<float>(id(pump_dose6).state)};

  - platform: template
    id: pump_dose5
    name: "Pump_Dose5"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 10000
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_dose:
            pump_dose: !lambda |-
              return {static_cast<float>(id(pump_dose1).state), static_cast<float>(id(pump_dose2).state), static_cast<float>(id(pump_dose3).state), static_cast<float>(id(pump_dose4).state), static_cast<float>(id(pump_dose5).state), static_cast<float>(id(pump_dose6).state)};

  - platform: template
    id: pump_dose6
    name: "Pump_Dose6"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 10000
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_dose:
            pump_dose: !lambda |-
              return {static_cast<float>(id(pump_dose1).state), static_cast<float>(id(pump_dose2).state), static_cast<float>(id(pump_dose3).state), static_cast<float>(id(pump_dose4).state), static_cast<float>(id(pump_dose5).state), static_cast<float>(id(pump_dose6).state)};

  - platform: template
    id: pump_circulation1
    name: "Pump_Circulation1"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 10000
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_circulation:
            pump_circulation: !lambda |-
              return {static_cast<float>(id(pump_circulation1).state), static_cast<float>(id(pump_circulation2).state), static_cast<float>(id(pump_circulation3).state), static_cast<float>(id(pump_circulation4).state), static_cast<float>(id(pump_circulation5).state), static_cast<float>(id(pump_circulation6).state)};

  - platform: template
    id: pump_circulation2
    name: "Pump_Circulation2"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 10000
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_circulation:
            pump_circulation: !lambda |-
              return {static_cast<float>(id(pump_circulation1).state), static_cast<float>(id(pump_circulation2).state), static_cast<float>(id(pump_circulation3).state), static_cast<float>(id(pump_circulation4).state), static_cast<float>(id(pump_circulation5).state), static_cast<float>(id(pump_circulation6).state)};

  - platform: template
    id: pump_circulation3
    name: "Pump_Circulation3"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 10000
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_circulation:
            pump_circulation: !lambda |-
              return {static_cast<float>(id(pump_circulation1).state), static_cast<float>(id(pump_circulation2).state), static_cast<float>(id(pump_circulation3).state), static_cast<float>(id(pump_circulation4).state), static_cast<float>(id(pump_circulation5).state), static_cast<float>(id(pump_circulation6).state)};

  - platform: template
    id: pump_circulation4
    name: "Pump_Circulation4"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 10000
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_circulation:
            pump_circulation: !lambda |-
              return {static_cast<float>(id(pump_circulation1).state), static_cast<float>(id(pump_circulation2).state), static_cast<float>(id(pump_circulation3).state), static_cast<float>(id(pump_circulation4).state), static_cast<float>(id(pump_circulation5).state), static_cast<float>(id(pump_circulation6).state)};

  - platform: template
    id: pump_circulation5
    name: "Pump_Circulation5"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 10000
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_circulation:
            pump_circulation: !lambda |-
              return {static_cast<float>(id(pump_circulation1).state), static_cast<float>(id(pump_circulation2).state), static_cast<float>(id(pump_circulation3).state), static_cast<float>(id(pump_circulation4).state), static_cast<float>(id(pump_circulation5).state), static_cast<float>(id(pump_circulation6).state)};

  - platform: template
    id: pump_circulation6
    name: "Pump_Circulation6"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 10000
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.pump_circulation:
            pump_circulation: !lambda |-
              return {static_cast<float>(id(pump_circulation1).state), static_cast<float>(id(pump_circulation2).state), static_cast<float>(id(pump_circulation3).state), static_cast<float>(id(pump_circulation4).state), static_cast<float>(id(pump_circulation5).state), static_cast<float>(id(pump_circulation6).state)};

  - platform: template
    id: servo_position1
    name: "Servo_position1"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 100
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.servo_position:
            servo_position: !lambda |-
              return {static_cast<uint8_t>(id(servo_position1).state), static_cast<uint8_t>(id(servo_position2).state), static_cast<uint8_t>(id(servo_position3).state), static_cast<uint8_t>(id(servo_position4).state), static_cast<uint8_t>(id(servo_position5).state), static_cast<uint8_t>(id(servo_position6).state), static_cast<uint8_t>(id(servo_position7).state), static_cast<uint8_t>(id(servo_position8).state)};

  - platform: template
    id: servo_position2
    name: "Servo_position2"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 100
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.servo_position:
            servo_position: !lambda |-
              return {static_cast<uint8_t>(id(servo_position1).state), static_cast<uint8_t>(id(servo_position2).state), static_cast<uint8_t>(id(servo_position3).state), static_cast<uint8_t>(id(servo_position4).state), static_cast<uint8_t>(id(servo_position5).state), static_cast<uint8_t>(id(servo_position6).state), static_cast<uint8_t>(id(servo_position7).state), static_cast<uint8_t>(id(servo_position8).state)};

  - platform: template
    id: servo_position3
    name: "Servo_position3"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 100
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.servo_position:
            servo_position: !lambda |-
              return {static_cast<uint8_t>(id(servo_position1).state), static_cast<uint8_t>(id(servo_position2).state), static_cast<uint8_t>(id(servo_position3).state), static_cast<uint8_t>(id(servo_position4).state), static_cast<uint8_t>(id(servo_position5).state), static_cast<uint8_t>(id(servo_position6).state), static_cast<uint8_t>(id(servo_position7).state), static_cast<uint8_t>(id(servo_position8).state)};

  - platform: template
    id: servo_position4
    name: "Servo_position4"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 100
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.servo_position:
            servo_position: !lambda |-
              return {static_cast<uint8_t>(id(servo_position1).state), static_cast<uint8_t>(id(servo_position2).state), static_cast<uint8_t>(id(servo_position3).state), static_cast<uint8_t>(id(servo_position4).state), static_cast<uint8_t>(id(servo_position5).state), static_cast<uint8_t>(id(servo_position6).state), static_cast<uint8_t>(id(servo_position7).state), static_cast<uint8_t>(id(servo_position8).state)};

  - platform: template
    id: servo_position5
    name: "Servo_position5"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 100
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.servo_position:
            servo_position: !lambda |-
              return {static_cast<uint8_t>(id(servo_position1).state), static_cast<uint8_t>(id(servo_position2).state), static_cast<uint8_t>(id(servo_position3).state), static_cast<uint8_t>(id(servo_position4).state), static_cast<uint8_t>(id(servo_position5).state), static_cast<uint8_t>(id(servo_position6).state), static_cast<uint8_t>(id(servo_position7).state), static_cast<uint8_t>(id(servo_position8).state)};

  - platform: template
    id: servo_position6
    name: "Servo_position6"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 100
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.servo_position:
            servo_position: !lambda |-
              return {static_cast<uint8_t>(id(servo_position1).state), static_cast<uint8_t>(id(servo_position2).state), static_cast<uint8_t>(id(servo_position3).state), static_cast<uint8_t>(id(servo_position4).state), static_cast<uint8_t>(id(servo_position5).state), static_cast<uint8_t>(id(servo_position6).state), static_cast<uint8_t>(id(servo_position7).state), static_cast<uint8_t>(id(servo_position8).state)};

  - platform: template
    id: servo_position7
    name: "Servo_position7"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 100
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.servo_position:
            servo_position: !lambda |-
              return {static_cast<uint8_t>(id(servo_position1).state), static_cast<uint8_t>(id(servo_position2).state), static_cast<uint8_t>(id(servo_position3).state), static_cast<uint8_t>(id(servo_position4).state), static_cast<uint8_t>(id(servo_position5).state), static_cast<uint8_t>(id(servo_position6).state), static_cast<uint8_t>(id(servo_position7).state), static_cast<uint8_t>(id(servo_position8).state)};

  - platform: template
    id: servo_position8
    name: "Servo_position8"
    optimistic: true
    mode: slider
    min_value: 0
    max_value: 100
    initial_value: 0
    step: 1
    on_value:
      then:
        - water_quality.servo_position:
            servo_position: !lambda |-
              return {static_cast<uint8_t>(id(servo_position1).state), static_cast<uint8_t>(id(servo_position2).state), static_cast<uint8_t>(id(servo_position3).state), static_cast<uint8_t>(id(servo_position4).state), static_cast<uint8_t>(id(servo_position5).state), static_cast<uint8_t>(id(servo_position6).state), static_cast<uint8_t>(id(servo_position7).state), static_cast<uint8_t>(id(servo_position8).state)};

  # - platform: template
  #   id: duration
  #   name: "Duration"
  #   optimistic: true
  #   min_value: 0
  #   max_value: 100
  #   initial_value: 0
  #   step: 1

  # - platform: template
  #   id: calibration
  #   name: "Calibration Value"
  #   optimistic: true
  #   min_value: 0
  #   max_value: 10000
  #   step: 0.01


# binary_sensor:
  # - platform: ezo_pmp
  #   is_paused:
  #     id: is_paused
  #     name: Is Paused

  # - platform: ezo_pmp
  #   pump_state:
  #     id: pump_state
  #     name: Pump State    


# status_led:
#     pin: 
#       number: GPIO33
#       mode: 
#         output: True
      # inverted: False


light:
  # - platform: status_led
  #   name: "status led"
  #   id: status
  #   pin: 
  #     number: GPIO33
  #     mode:
  #       output: True
  #     inverted: False

  - platform: binary
    name: "led"
    id: led
    output: out
    effects:
      - strobe:
          name: strobe
          colors:
            - state: true
              brightness: 100%
              duration: 100ms
            - state: false
              brightness: 0%
              duration: 50ms
            - state: true
              brightness: 100%
              duration: 100ms
            - state: false
              brightness: 0%
              duration: 250ms
    # on_state:
    #   if:
    #     condition:
    #       wifi.connected:
    #     then:
    #     - light.turn_on: 
    #         id: led
    #         # effect: strobe


output:
  - platform: gpio
    id: out
    pin: 
      number: GPIO33
      mode:
        output: True
      inverted: False
